name: Update @version PHPDoc on Release

on:
  release:
    types:
      - created

jobs:
  update-version:
    runs-on: ubuntu-latest
    env:
      BRANCH: ${{ github.event.release.target_commitish }}
      VERSION: ${{ github.ref_name }}
      USER: Release Workflow
      EMAIL: <noreply@marco-scholz.com>
      BUILD: $(date -u +'%Y-%m-%d %H:%M UTC')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update Changelog
        run: |
          # Extract the [Unreleased] section
          UNRELEASED=$(awk '/## \[Unreleased\]/,0' CHANGELOG.md)
          
          # Create the new section header with the release tag and date
          NEW_SECTION="## [${{ github.event.release.tag_name }}] - ${{ env.BUILD }}"
          
          # Append the extracted [Unreleased] content to the new section
          NEW_SECTION_CONTENT=$(echo "$UNRELEASED" | sed "s/## \[Unreleased\]/$NEW_SECTION/")
          
          # Remove empty subsections
          UPDATED_SECTION=$(echo "$NEW_SECTION_CONTENT" | awk '/### / {print x; x=""; print; next} NF {x=(!x)?$0:x ORS $0}')
          
          # Replace the [Unreleased] section in the changelog with the new section and an empty [Unreleased] section
          sed -i "/## \[Unreleased\]/,/^$/c\\$UPDATED_SECTION\n\n## [Unreleased]\n### Added\n### Changed\n### Deprecated\n### Removed\n### Fixed\n### Security" CHANGELOG.md
          
          # Add version linking
          echo "[${{ github.event.release.tag_name }}]: https://github.com/marcoscholz/simple-api/compare/v$(awk -F']' '/^\[.*\]/ {print $1}' CHANGELOG.md | sed -n '2p' | tr -d '[')...${{ github.event.release.tag_name }}" >> CHANGELOG.md
          echo "[Unreleased]: https://github.com/marcoscholz/simple-api/compare/${{ github.event.release.tag_name }}...HEAD" >> CHANGELOG.md

      - name: Replace @version tags with release tag
        run: |
          find . -type f -name "*.php" -exec sed -i "s/@version [a-zA-Z0-9_.-]*/@version ${{ env.VERSION }}/g" {} \;
          find . -type f -name "*.php" -exec sed -i "s/@build [a-zA-Z0-9_.-]*/@version ${{ env.BUILD }}/g" {} \;

      - name: Commit and push changes
        run: |
          git config --local user.email ${{ env.EMAIL }}
          git config --local user.name ${{ env.USER}}
          git commit -am "ReleaseCommit ${{ github.event.release.tag_name }}"
          git push

      - name: Update Release Tag
        run: |
          git tag -fa ${{ github.event.release.tag_name }} -m "Moved ReleaseTag ${{ env.VERSION }} to generated ReleaseCommit"
          git push origin :${{ github.event.release.tag_name }}
          git push origin ${{ github.event.release.tag_name }}
